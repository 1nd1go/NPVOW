function plotLFAPModelVariability(exp_type)
%plotLFAPModelVariability(expType) plots variability of RFs for each condition in
%       LFAP experiments, where the experiment type is specified.
%
%                Version 1.0,  16 November 2015 by Leonid Fedorov
%
%                Tested with MATLAB 8.4 on a Xeon E5-1620 3.6Ghz under W7
%
%

% TODO: check for exp_type and do different thigns based on its value
exp_type = 1;

condvars = containers.Map;

%we just add parts that were present for every condition and barplot all


getData = @(pathkey, type) loadRFVariability(pathkey, type);
getSum = @(x) x.('sum');
%TODO: compose a variability function that'd run on the array below
% t = {'st-d-h90';'st-d-h270';'st-d-ub90';'st-d-ub270';'st-d-lb90';'st-d-lb270';'st-d-lua90';'st-d-lua270';'st-d-rua90';'st-d-rua270';'st-d-rla90';'st-d-rla270';'st-d-lla90';'st-d-lla270';'st-d-rll90';'st-d-rll270';'st-d-lll90';'st-d-lll270';'st-d-rul90';'st-d-rul270';'st-d-lul90';'st-d-lul270'}
condvars('body') = ...
    getSum(getData('st-d-h90','shading')) + ...
    getSum(getData('st-d-h270','shading')) + ...
    getSum(getData('st-d-ub90','shading')) + ...
    getSum(getData('st-d-ub270','shading')) + ...
    getSum(getData('st-d-lb90','shading')) + ...
    getSum(getData('st-d-lb270','shading'));

basecase = condvars('body') + ... %compute the base case, because upper arms are always present
    getSum(getData('st-d-lua90','shading')) + ...
    getSum(getData('st-d-lua270','shading')) + ...
    getSum(getData('st-d-rua90','shading')) + ...
    getSum(getData('st-d-rua270','shading'));

condvars('arms') = basecase + ...
    getSum(getData('st-d-rla90','shading')) + ...
    getSum(getData('st-d-rla270','shading')) + ...
    getSum(getData('st-d-lla90','shading')) + ...
    getSum(getData('st-d-lla270','shading'));

condvars('legs') = basecase + ...
    getSum(getData('st-d-rll90','shading')) + ...
    getSum(getData('st-d-rll270','shading')) + ...
    getSum(getData('st-d-lll90','shading')) + ...
    getSum(getData('st-d-lll270','shading'));

condvars('thighs') = basecase + ...
    getSum(getData('st-d-rul90','shading')) + ...
    getSum(getData('st-d-rul270','shading')) + ...
    getSum(getData('st-d-lul90','shading')) + ...
    getSum(getData('st-d-lul270','shading'));

%below we have mixed conditions, but we need to substract the base case
%because its then counted twice. Recall the probability of events with non-empty intersection =J
condvars('arms&legs') = condvars('arms') + condvars('legs') - basecase;
condvars('thighs&legs') = condvars('thighs') + condvars('legs') - basecase;
condvars('arms&thighs') = condvars('arms') + condvars('thighs') - basecase;


condvars('all') = condvars('arms') + condvars('thighs') + condvars('legs') - 2 * basecase;
figure;
bar([condvars('body'),condvars('arms'),condvars('legs'),condvars('thighs'),condvars('arms&legs'),condvars('thighs&legs'),condvars('arms&thighs'),condvars('all')])


return